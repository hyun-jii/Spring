■■■ Spring MVC ■■■

1. 웹 개발을 위한 MVC 패턴이 적용된 Spring Framework.
   Spring 에서는 DispatcherServlet 클래스가 컨트롤러 역할을 수행하게 된다.

2. Spring MVC 의 주요 구성요소
   - DispatcherServlet
     : 클라이언트의 요청을 전달받는다.
       Controller(사용자 정의 컨트롤러)에게 클라이언트의 요청을 전달하고,
       Controller 가 리턴한 결과값을 View에 전달하여
       적합한 응답을 생성하도록 처리한다.
   - HandlerMapping
     : 클라이언트의 요청 URL 을 어떤 Controller 가 처리할지 결정한다.
   - Controller : 사용자 정의 Controller. 액션 처리. 우리가 작성.
     : 사용자 정의 Controller. 액션 처리. 우리가 작성.
   - ModelAndView
     : View 객체 정보와 결과값이 들어있는 객체.
   - ViewResolver
     : 요청에 대한 처리 결과를 보여줄 View를 결정한다.
   - View 
     : 요청에 대한 처리 결과를 보여줄 응답(결과 출력)을 생성한다. 우리가 작성.
   - web.xml 
     : DispatcherServlet 서블릿 객체 등록. 우리가 작성.
     
   - dispatcher-servlet.xml 
     : Controller 객체 등록. 우리가 작성.

3. Spring MVC 실행 흐름
   - 사용자 요청 -> DispatcherServlet.
   - DispatcherServlet -> HandlerMapping 에 주소 분석 요청.
   - DispathcerServlet -> 특정 Controller 객체 호출 및 결과 수신.
   			  결과는 ModelAndView 객체.
   
     ※ ModelAndView 객체
   	: View 객체 정보와 결과값이 들어있는 객체.
   - DispatcherServlet -> ViewResolver 에 View 객체 분석 요청.
   - DispatcherServlet -> 특정 View 객체에 Model 객체를 넘겨주고
			  결과 출력.

4. Spring MVC 에서 우리가 해야 할 일
   - Controller
     액션 처리를 담당하는 Controller 클래스 작성.
     Annotation 을 사용하거나 Controller 인터페이스를 구현하여 작성.

   - View
     결과 출력용 JSP 페이지 작성.
  
   - web.xml
     서블릿 주소와 DispatcherServlet 클래스 등록.

   - dispatcher-servlet.xml
     우리가 작성한 Controller 객체 등록.
     URL 매핑 주소 등록.


------------------------------------------------------------------------------------------------------------

■■■ Spring MVC 프로젝트 관련 실습(mvc01) ■■■

○ Perspective
   : JavaEE
○ 다이나믹 웹 프로젝트 생성
   : mvc01
○ 기존 환경 설정 파일 import
   : standard_3.epf
○ 톰캣 서버 등록 및 포트(port) 설정
   : port 8090 / URIEncoding="UTF-8"
○ 기타 이클립스 환경 설정
   : 폰트, 편집포맷, 인코딩방식, 템플릿 등...
○ Spring MVC 환경 설정을 위한 라이브러리 등록
   : WebContent > WEB-INF > lib 경로에 등록
   - 경로1 : C:\s-f-with-docs\spring-framework-3.0.2.RELEASE\dist
     *파일 1 : org.springframework.aop-3.0.2.RELEASE.jar
     *파일 2 : org.springframework.asm-3.0.2.RELEASE.jar
     *파일 3 : org.springframework.beans-3.0.2.RELEASE.jar
     *파일 4 : org.springframework.context-3.0.2.RELEASE.jar
     *파일 5 : org.springframework.core-3.0.2.RELEASE.jar
     *파일 6 : org.springframework.expression-3.0.2.RELEASE.jar
     *파일 7 : org.springframework.transaction-3.0.2.RELEASE.jar
     *파일 8 : org.springframework.web.servlet-3.0.2.RELEASE.jar
     *파일 9 : org.springframework.web-3.0.2.RELEASE.jar
     *파일 10 : org.springframework.jdbc-3.0.2.RELEASE.jar

   - 경로2 : C:\s-f-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     * 파일 11 : com.springsource.org.apache.commons.logging-1.1.1.jar

   - 경로3 : C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
     * 파일 12 : ojdbc6.jar

   - 경로4 : C:\downloads\10_JSTL\jakarta-taglibs-standard-1.1.2\lib (JSTL 다운로드 경로)
     * 파일 13 : jstl.jar
     * 파일 14 : standard.jar

○ 물리적 파일 구성
   - HelloController.java
   - Hello.jsp
   - dispatcher-servlet.xml
   - web.xml

   ※ 『dispatcher-servlet.xml』 파일의 기본 설정 내용을 구성하기 위해서
       스프링 doc 를 참고해서 작성할 수 있도록 한다.
       해당 파일은 『WebContent > WEB-INF』 경로에 생성한다.

------------------------------------------------------------------------------------------------------------

■■■ Spring MVC 프로젝트 관련 실습(mvc02) ■■■

○ Perspective
   : JavaEE
○ 다이나믹 웹 프로젝트 생성
   : mvc02
○ 실습 성격
   : 데이터 송수신 실습(Spring MVC 버전)
○ Spring MVC 환경 설정을 위한 라이브러리 등록
   : WebContent > WEB-INF > lib 경로에 등록
   - 경로1 : C:\s-f-with-docs\spring-framework-3.0.2.RELEASE\dist
     *파일 1 : org.springframework.aop-3.0.2.RELEASE.jar
     *파일 2 : org.springframework.asm-3.0.2.RELEASE.jar
     *파일 3 : org.springframework.beans-3.0.2.RELEASE.jar
     *파일 4 : org.springframework.context-3.0.2.RELEASE.jar
     *파일 5 : org.springframework.core-3.0.2.RELEASE.jar
     *파일 6 : org.springframework.expression-3.0.2.RELEASE.jar
     *파일 7 : org.springframework.transaction-3.0.2.RELEASE.jar
     *파일 8 : org.springframework.web.servlet-3.0.2.RELEASE.jar
     *파일 9 : org.springframework.web-3.0.2.RELEASE.jar
     *파일 10 : org.springframework.jdbc-3.0.2.RELEASE.jar

   - 경로2 : C:\s-f-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     * 파일 11 : com.springsource.org.apache.commons.logging-1.1.1.jar

   - 경로3 : C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
     * 파일 12 : ojdbc6.jar

   - 경로4 : C:\downloads\10_JSTL\jakarta-taglibs-standard-1.1.2\lib (JSTL 다운로드 경로)
     * 파일 13 : jstl.jar
     * 파일 14 : standard.jar

○ 물리적 파일 구성
   - SendController.java	-> 컨트롤러 객체
   - Send.jsp			-> 뷰 객체
   
   - ReceiveController.java	-> 컨트롤러 객체
   - Receive.jsp		-> 뷰 객체

   - dispatcher-servlet.xml	-> 컨트롤러 객체 등록
   				   URL 매핑 주소 등록
   - web.xml			-> DispatcherServlet 객체 등록
			           URL 매핑 주소 등록
 
○ 사용자 최초 요청 주소
   http://localhost:8090/mvc0/send.do

------------------------------------------------------------------------------------------------------------

■■■ Spring MVC 프로젝트 관련 실습(mvc03) ■■■

○ Perspective
   : JavaEE
○ 다이나믹 웹 프로젝트 생성
   : mvc03
○ 실습 성격
   : 데이터 송수신 실습(Spring MVC 버전)
     JDBC 모듈 추가 실습
     SimpleDriverDataSource 클래스 활용

○ 기능 구현
   : 사용자로부터 이름, 전화번호 데이터를 입력받아 DB 에 저장.
     이름, 전화번호 항목을 DB로 부터 읽어 화면에 출력.

○ 사전 작업
   - TBL_MEMBERLIST 테이블 생성 혹은 활용
   - MEMBERLISTSEQ 시퀀스 생성 혹은 활용
   - 샘플 데이터 입력

○ 화면 구성
   이름 [     ]  -> <input type="text">
   전화 [     ]  -> <input type="text">
   <회원 추가>   -> <button type="button">

   전체 인원 수 : 2명 ->  <p> .... </p>
   -------------------------------------- -> <table> 혹은 <div>
   번호     이름      전화번호
     1      한현수    010....
     2      정광현    010....
   --------------------------------------


○ Spring MVC 환경 설정을 위한 라이브러리 등록
   : WebContent > WEB-INF > lib 경로에 등록
   - 경로1 : C:\s-f-with-docs\spring-framework-3.0.2.RELEASE\dist
     *파일 1 : org.springframework.aop-3.0.2.RELEASE.jar
     *파일 2 : org.springframework.asm-3.0.2.RELEASE.jar
     *파일 3 : org.springframework.beans-3.0.2.RELEASE.jar
     *파일 4 : org.springframework.context-3.0.2.RELEASE.jar
     *파일 5 : org.springframework.core-3.0.2.RELEASE.jar
     *파일 6 : org.springframework.expression-3.0.2.RELEASE.jar
     *파일 7 : org.springframework.transaction-3.0.2.RELEASE.jar
     *파일 8 : org.springframework.web.servlet-3.0.2.RELEASE.jar
     *파일 9 : org.springframework.web-3.0.2.RELEASE.jar
     *파일 10 : org.springframework.jdbc-3.0.2.RELEASE.jar

   - 경로2 : C:\s-f-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     * 파일 11 : com.springsource.org.apache.commons.logging-1.1.1.jar

   - 경로3 : C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
     * 파일 12 : ojdbc6.jar

   - 경로4 : C:\downloads\10_JSTL\jakarta-taglibs-standard-1.1.2\lib (JSTL 다운로드 경로)
     * 파일 13 : jstl.jar
     * 파일 14 : standard.jar

○ 물리적 파일 구성
   - mvc03_scott.sql		-> 데이터베이스 관련 객체 준비.

   - MemberDTO.java		-> 사용자 정의 자료형 객체

   - IMemberDAO.java		-> 인터페이스.
   - MemberDAO.java		-> 데이터베이스 액션 처리 객체.
				   ※ Connection 객체에 대한 의존성 주입
				      -> setter 메소드 추가

   - MemberListController.java  -> 사용자 정의 컨트롤러 객체.
				   리스트 출력 액션.
 				   ※ DAO 객체에 대한 의존성 주입
				      -> setter 메소드 추가

   - MemberList.jsp		-> 회원 명단 출력용 뷰(View)
				   회원 추가 폼 화면 구성

   - MemberInsertController.java -> 사용자 정의 컨트롤러 객체.
				    회원 데이터 추가 액션.
   				    ※ DAO 객체에 대한 의존성 주입
					-> setter 메소드 추가


   - dispatcher-servlet.xml	-> 컨트롤러 객체 등록
   				   사용자 요청 URL 매핑 주소 등록
				   SimpleDriverDataSource 객체 등록
				   의존객체 주입 설정
				   DAO 객체 등록

   - web.xml			-> DispatcherServlet 객체 등록
			           URL 매핑 주소 등록
 
○ 사용자 최초 요청 주소
   http://localhost:8090/mvc03/memberlist.action


















